def codelab(name : str, codelab_md: str):
    return genrule(
        name = name,
        srcs = [codelab_md],
        deps = ["//docs/build_defs:codelab_template"],
        cmd = "$TOOLS export -f $(location //docs/build_defs:codelab_template) $SRC",
        outs = [f"{name}"],
        tools = ["///third_party/go/github.com_googlecodelabs_tools_claat//:claat"],
        visibility = ["//docs/..."],
    )

def html_template(name : str, src : str, output : str = ''):
    cmd = '"$TOOL" --template "$SRCS_TEMPLATE" --in "$SRCS_IN"'
    if output:
        cmd = f'{cmd} -f {output}'
    return genrule(
        name = name,
        srcs = {
            "template": ["//docs:template_html"],
            "in": [src],
        },
        outs = [output if output else src],
        cmd = f'{cmd} > "$OUT"',
        tools = ["//docs/tools/templater"],
        visibility = ["//docs/..."],
    )

def plugin_rules(name : str, revision : str):
    remote = remote_file(
        name = f"{name}_remote",
        url = f"https://github.com/please-build/{name}-rules/archive/refs/tags/{revision}.tar.gz",
        extract = True,
    )

    # use plz query rules to extract the rules
    return build_rule(
        name = name,
        srcs = [remote],
        outs = [f"{name}_plugin.json"],
        cmd = f"$TOOLS_CONFIG --plugin_dir $SRCS --plz $TOOLS_PLEASE > $OUT",
        tools = {
            "please": ["//src:please"],
            "config": ["//docs/tools/plugin_config_tool"],
        },
        labels = [f"{name}_plugin_docs_version:{revision}"],
    )
